{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASMIT\\\\Desktop\\\\Transportation\\\\frontend\\\\src\\\\EnquiryForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PhoneInput from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\nimport { isValidPhoneNumber } from 'react-phone-number-input';\nimport './EnquiryForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  // Define state variables for form inputs\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState(''); // For phone number input\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState(''); // Error state for validation\n\n  // Handle form submission\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!isValidPhoneNumber(phone)) {\n      setError('Invalid phone number format.');\n      return;\n    }\n\n    // Clear any previous errors\n    setError('');\n\n    // Add your form submission logic here\n    console.log({\n      name,\n      phone,\n      email,\n      message\n    });\n\n    // Reset form after submission (optional)\n    setName('');\n    setPhone('');\n    setEmail('');\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"enquiry-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"enquiry-header\",\n      children: \"FOR ANY ENQUIRY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Name\",\n        className: \"input-field\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PhoneInput, {\n        placeholder: \"Enter Phone Number\",\n        className: \"phone-field\",\n        value: phone,\n        onChange: setPhone,\n        defaultCountry: \"IN\" // Optional: set a default country\n        ,\n        international: true // Optional: enable international format\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        className: \"input-field\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter Message\",\n        className: \"text-area\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"MAIL US\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"idm7zdgNMT2Oy8GrB1v8HGXp1X0=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","PhoneInput","isValidPhoneNumber","jsxDEV","_jsxDEV","ContactForm","_s","name","setName","phone","setPhone","email","setEmail","message","setMessage","error","setError","handleSubmit","event","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","required","defaultCountry","international","_c","$RefreshReg$"],"sources":["C:/Users/ASMIT/Desktop/Transportation/frontend/src/EnquiryForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PhoneInput from 'react-phone-number-input';\r\nimport 'react-phone-number-input/style.css';\r\nimport { isValidPhoneNumber } from 'react-phone-number-input';\r\nimport './EnquiryForm.css'\r\n\r\nconst ContactForm = () => {\r\n  // Define state variables for form inputs\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState(''); // For phone number input\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState(''); // Error state for validation\r\n\r\n\r\n  // Handle form submission\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!isValidPhoneNumber(phone)) {\r\n      setError('Invalid phone number format.');\r\n      return;\r\n    }\r\n\r\n    // Clear any previous errors\r\n    setError('');\r\n\r\n    // Add your form submission logic here\r\n    console.log({ name, phone, email, message });\r\n\r\n    // Reset form after submission (optional)\r\n    setName('');\r\n    setPhone('');\r\n    setEmail('');\r\n    setMessage('');\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className='enquiry-body'>\r\n      <h1 className='enquiry-header'>FOR ANY ENQUIRY</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Name\"\r\n          className='input-field'\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n\r\n        {/* PhoneInput with country code */}\r\n        <PhoneInput\r\n          placeholder=\"Enter Phone Number\"\r\n          className='phone-field'\r\n          value={phone}\r\n          onChange={setPhone}\r\n          defaultCountry=\"IN\"  // Optional: set a default country\r\n          international       // Optional: enable international format\r\n        />\r\n        {/* Display error message if phone number is missing */}\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter Email\"\r\n          className='input-field'\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <textarea\r\n          placeholder=\"Enter Message\"\r\n          className='text-area'\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\" className='submit-button'>\r\n          MAIL US\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}